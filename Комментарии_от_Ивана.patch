Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/Main.java	(date 1692109809910)
@@ -8,7 +8,7 @@
     public static void main(String[] args) {
 
         Commands commands = new Commands();
-        while(true){
+        while(true) {
             commands.comandHandler();
         }
     }
Index: src/service/UserInteraction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/UserInteraction.java b/src/service/UserInteraction.java
--- a/src/service/UserInteraction.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/service/UserInteraction.java	(date 1692114199295)
@@ -1,32 +1,37 @@
 package service;
 
-import Supports.User;
-import controller.CommandList;
+import entities.UserEntity;
 import repository.UserRepository;
 
 import java.io.File;
 import java.util.ArrayList;
 
+//TODO: rename to UserService & add Registration method here
 public class UserInteraction {
-    private ArrayList<User> users = new ArrayList<User>();
 
-    public void setUsers(User user){
-        this.users.add(user);
+//    private ArrayList<User> users = new ArrayList<User>();
+    private final UserRepository userRepository;
+
+    public UserInteraction(UserRepository userRepository) {
+        this.userRepository = userRepository;
     }
 
-    public ArrayList<User> getUsers() {
+    public ArrayList<UserEntity> getUsers() {
 
         String filePath = UserRepository.getFILEPATH();
 
         int fileCounter = countOfUsers(filePath);
 
+        ArrayList<UserEntity> users = new ArrayList<>();
         if(fileCounter > users.size()) {
-            User user;
+            UserEntity user;
             String fullFileName;
             for (int i = users.size(); i < fileCounter; i++) {
                 fullFileName = filePath + "Object_" + i + ".ser";
                 user = UserRepository.getObject(fullFileName);
-                if (user != null) setUsers(user);
+                if (user != null) {
+                    users.add(user);
+                }
             }
         }
         return users;
Index: src/Supports/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Supports/User.java b/src/entities/UserEntity.java
rename from src/Supports/User.java
rename to src/entities/UserEntity.java
--- a/src/Supports/User.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/entities/UserEntity.java	(date 1692114199335)
@@ -1,17 +1,18 @@
-package Supports;
+package entities;
 
 import java.io.Serializable;
 
-public class User implements Serializable {
+public class UserEntity implements Serializable {
 
+    //TODO: add ID
     private String name;
     private byte age;
-    private String password;
+//    private String password;
     private Gender gender;
 
-    public User(){}
+    public UserEntity(){}
 
-    public User(String name, byte age, String password, Gender gender){
+    public UserEntity(String name, byte age, String password, Gender gender){
         this.name = name;
         this.age = age;
         this.password = password;
@@ -35,7 +36,7 @@
     }
 
     public String toString(){
-        return "User data: " + name + " " + age + " " + gender.getLongGender();
+        return "User with name: " + name + " age:  " + age + " gender:" + gender.getLongGender();
     }
 
 }
Index: src/service/Commands.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/Commands.java b/src/service/Commands.java
--- a/src/service/Commands.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/service/Commands.java	(date 1692113907779)
@@ -9,7 +9,7 @@
     private ScannerValidation userScanner = new ScannerValidation();
     private UserInteraction users = new UserInteraction();
 
-
+    //TODO: rename to command
     public void comandHandler(){
 
         System.out.println("Enter the message");
Index: src/service/Registration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/Registration.java b/src/service/Registration.java
--- a/src/service/Registration.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/service/Registration.java	(date 1692114199327)
@@ -1,59 +1,66 @@
 package service;
 
-import Supports.Gender;
-import Supports.User;
+
+//TODO rename to lowerCase
+import entities.Gender;
+import entities.UserEntity;
 import controller.ScannerValidation;
 import repository.UserRepository;
 
-
+@Deprecated
 public class Registration {
 
-    private User user;
+//    private User user;
+
 
     public void getNewUser(ScannerValidation scanner) {
+        //scanName(User)
         System.out.print("Please enter your name: ");
         String name = scanner.nextLine();
 
 
+        //setGender
         Gender gender;
         do {
             System.out.print("Please enter your gender m/f: ");
             String inputGender = scanner.nextLine();
             gender = checkGender(inputGender);
-        }while(gender == null);
+        } while (gender == null);
 
-        System.out.print("Please enter your password: ");
-        String password = scanner.nextLine();
 
-        boolean ageFlag;
+//        System.out.print("Please enter your password: ");
+//        String password = scanner.nextLine();
+
+        //
         byte age;
         System.out.print("Please enter your age: ");
         do {
             age = scanner.nextByte();
-            ageFlag = checkAge(age);
-        }while(ageFlag);
+        } while (checkAge(age));
 
-        this.user = new User(name, age, password, gender);
+        UserEntity user = new UserEntity(name, age, password, gender);
         UserRepository.objectToFile(user);
     }
-    private boolean checkAge(byte age){
-        if(age > 0 && age <= 100) return false;
-        else{
+
+    private boolean checkAge(byte age) {
+        if (age > 0 && age <= 100) return false;
+        else {
             System.out.println("Please set your age between 1 and 100");
             return true;
         }
     }
-    private Gender checkGender(String inputGender){
+
+    private Gender checkGender(String inputGender) {
         Gender gender;
-        if (inputGender.equals("m") || inputGender.equals("male") || inputGender.equals("man")){
+        if (inputGender.equals("m") || inputGender.equals("male") || inputGender.equals("man")) {
             gender = Gender.MALE;
             return gender;
         } else if (inputGender.equals("f") || inputGender.equals("female") || inputGender.equals("woman")) {
             gender = Gender.FEMALE;
             return gender;
-        }else{
+        } else {
             System.out.println("Please enter your gender by choose <<m/male/man>> if u r male\n" +
-                               "Or by choose <<f/female/woman>> if u r female");
+                    "Or by choose <<f/female/woman>> if u r female");
             return null;
         }
     }
Index: src/controller/ScannerValidation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controller/ScannerValidation.java b/src/controller/ScannerValidation.java
--- a/src/controller/ScannerValidation.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/controller/ScannerValidation.java	(date 1692111035201)
@@ -2,6 +2,7 @@
 
 import java.util.Scanner;
 
+//TODO rename ConsoleScanner
 public class ScannerValidation {
     private Scanner scanner = new Scanner(System.in);
 
Index: src/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/repository/UserRepository.java b/src/repository/UserRepository.java
--- a/src/repository/UserRepository.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/repository/UserRepository.java	(date 1692114199323)
@@ -1,13 +1,17 @@
 package repository;
 
-import Supports.User;
+import entities.UserEntity;
 
+//FIXME: import only needed classes
 import java.io.*;
+import java.util.List;
 
 public class UserRepository {
+
     private static final String FILEPATH = "/home/andrew/IdeaProjects/NativeCSR/repo/src/data/";
 
-    public static void objectToFile(User obj) {
+    //FIXME: objectToFile --> save
+    public void objectToFile(UserEntity obj) {
 
         File file = new File(FILEPATH);
         String[] ls = file.list();
@@ -18,19 +22,23 @@
             FileOutputStream fileOut = new FileOutputStream(new File(FILEPATH, fullFileName));
             ObjectOutputStream objectOut = new ObjectOutputStream(fileOut);
             objectOut.writeObject(obj);
-            objectOut.close();
+
             System.out.printf("Object %s was saved successfully\n", obj.getName());
         } catch (Exception ex) {
             ex.printStackTrace();
+        } finally {
+            //TODO read about try-catch-resources
+            objectOut.close();
         }
     }
 
-    public static User getObject(String filepath) {
+    //FIXME: getObject --> getById (?)
+    public UserEntity getObject(String filepath) {
         try {
             FileInputStream fileIn = new FileInputStream(filepath);
             ObjectInputStream objectIn = new ObjectInputStream(fileIn);
 
-            User user = (User) objectIn.readObject();
+            UserEntity user = (UserEntity) objectIn.readObject();
 
             objectIn.close();
             return user;
@@ -40,7 +48,20 @@
         }
     }
 
-    public static String getFILEPATH() {
+    public List<UserEntity> getAll(){
+        //TODO implementation
+        String[] ls = file.list();
+    }
+
+    public void deleteById() {
+        String[] ls = file.list();
+    }
+
+    public List<Integer> convertTextIdsToInteger(String[] ids){
+        //TODO: implementation
+    }
+
+    public String getFILEPATH() {
         return FILEPATH;
     }
 }
Index: src/Supports/Gender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Supports/Gender.java b/src/entities/Gender.java
rename from src/Supports/Gender.java
rename to src/entities/Gender.java
--- a/src/Supports/Gender.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/entities/Gender.java	(date 1692113907767)
@@ -1,9 +1,7 @@
-package Supports;
+package entities;
 
-import controller.CommandList;
+//TODO: remove redundant
 
-import java.util.HashMap;
-import java.util.Locale;
 
 public enum Gender {
     MALE("male", "m"),
Index: src/controller/CommandList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controller/CommandList.java b/src/controller/CommandList.java
--- a/src/controller/CommandList.java	(revision bed05ccc94b119a3eee0aa76989b90f3dcd26f06)
+++ b/src/controller/CommandList.java	(date 1692110114768)
@@ -5,8 +5,8 @@
 public enum CommandList {
     HELP("help", "Enter the 'help' to see all commands with them descriptions"),
     REGISTRATION("reg", "To registration new user"),
-    ALLUSERS("sau", "See all users"),
-    REMOVE("kill", "Remove user");
+    ALL_USERS("sau", "See all users"),
+    REMOVE("remove", "Remove user");
     private String shortCommand;
     private String description;
 
@@ -24,7 +24,8 @@
         return description;
     }
 
-    private static HashMap<String, CommandList> stringEnum = new HashMap<String, CommandList>();
+    //TODO: move up
+    private static HashMap<String, CommandList> stringEnum = new HashMap<>();
 
     static {
         for (CommandList command : CommandList.values()) {
